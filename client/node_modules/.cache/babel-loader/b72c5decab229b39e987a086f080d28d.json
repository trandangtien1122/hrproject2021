{"ast":null,"code":"var _jsxFileName = \"/Users/hoangmac/PhpstormProjects/hrproject/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Semantic/semantic.min.css';\nimport './style.css';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui placeholder segment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui two column very relaxed stackable grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui left icon input\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"user icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui left icon input\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"lock icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ui blue submit button\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"middle aligned column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui big button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"signup icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), \"Sign Up\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui vertical divider\",\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\n\nfunction ModalExampleMultiple() {\n  _s();\n\n  const [firstOpen, setFirstOpen] = React.useState(false);\n  const [secondOpen, setSecondOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setFirstOpen(true),\n      children: \"Open first Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setFirstOpen(false),\n      onOpen: () => setFirstOpen(true),\n      open: firstOpen,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Modal #1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"right arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We have more to share with you. Follow us along to modal 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setSecondOpen(true),\n          primary: true,\n          children: [\"Proceed \", /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"right chevron\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setSecondOpen(false),\n        open: secondOpen,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Modal #2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"That's everything!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: \"check\",\n            content: \"All Done\",\n            onClick: () => setSecondOpen(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalExampleMultiple, \"jLQNSAOzagU3CqMp9IQ2qrBd2o0=\");\n\n_c2 = ModalExampleMultiple;\nexport default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"ModalExampleMultiple\");","map":{"version":3,"sources":["/Users/hoangmac/PhpstormProjects/hrproject/src/components/login.js"],"names":["React","ReactDOM","Button","Icon","Modal","Login","props","ModalExampleMultiple","firstOpen","setFirstOpen","useState","secondOpen","setSecondOpen"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom';\n\nimport './Semantic/semantic.min.css'\nimport './style.css'\nimport { Button, Icon, Modal } from 'semantic-ui-react'\n\n\n\n\nconst Login = (props) =>{\n    return(\n        <div className='ui container'>\n            <div className=\"ui placeholder segment\">\n                <div className=\"ui two column very relaxed stackable grid\">\n                    <div className=\"column\">\n                        <div className=\"ui form\">\n                            <div className=\"field\">\n                                <label>Username</label>\n                                <div className=\"ui left icon input\">\n                                    <input type=\"text\" placeholder=\"Username\" />\n                                        <i className=\"user icon\"></i>\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <label>Password</label>\n                                <div className=\"ui left icon input\">\n                                    <input type=\"password\" />\n                                        <i className=\"lock icon\"></i>\n                                </div>\n                            </div>\n                            <div className=\"ui blue submit button\">Login</div>\n                        </div>\n                    </div>\n                    <div className=\"middle aligned column\">\n                        <div className=\"ui big button\">\n                            <i className=\"signup icon\"></i>\n                            Sign Up\n                        </div>\n                    </div>\n                </div>\n                <div className=\"ui vertical divider\">\n                    Or\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nfunction ModalExampleMultiple() {\n    const [firstOpen, setFirstOpen] = React.useState(false)\n    const [secondOpen, setSecondOpen] = React.useState(false)\n\n    return (\n        <>\n            <Button onClick={() => setFirstOpen(true)}>Open first Modal</Button>\n\n            <Modal\n                onClose={() => setFirstOpen(false)}\n                onOpen={() => setFirstOpen(true)}\n                open={firstOpen}\n            >\n                <Modal.Header>Modal #1</Modal.Header>\n                <Modal.Content image>\n                    <div className='image'>\n                        <Icon name='right arrow' />\n                    </div>\n                    <Modal.Description>\n                        <p>We have more to share with you. Follow us along to modal 2</p>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => setSecondOpen(true)} primary>\n                        Proceed <Icon name='right chevron' />\n                    </Button>\n                </Modal.Actions>\n\n                <Modal\n                    onClose={() => setSecondOpen(false)}\n                    open={secondOpen}\n                    size='small'\n                >\n                    <Modal.Header>Modal #2</Modal.Header>\n                    <Modal.Content>\n                        <p>That's everything!</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button\n                            icon='check'\n                            content='All Done'\n                            onClick={() => setSecondOpen(false)}\n                        />\n                    </Modal.Actions>\n                </Modal>\n            </Modal>\n        </>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}